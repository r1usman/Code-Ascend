Question.json
{
    "Description": "The city park of IT City contains n east to west paths and n north to south paths. Each east to west path crosses each north to south path, so there are n^2 intersections.\n\nThe city funded purchase of five benches. To make it seems that there are many benches it was decided to place them on as many paths as possible. Obviously this requirement is satisfied by the following scheme: each bench is placed on a cross of paths and each path contains not more than one bench.\n\nHelp the park administration count the number of ways to place the benches.",
    "Input": "The only line of the input contains one integer n (5 ≤ n ≤ 100) — the number of east to west paths and north to south paths.",
    "Output": "Output one integer — the number of ways to place the benches.",
    "Examples": [
        {
            "input": "5",
            "output": "120"
        }
    ],
    "Note": ""
}

Question.json:
{
    "Description":
    "Input":
    "Output":
    "Examples": [
        {
            "input": 
            "output":
        }
    ],
    "Note":
}


Metadata.json:
"name":
"difficulty": 
"raw_tags": []
"tags": []

// ======================

Format1
├── general_schema_format1.txt
├── problem_1
│   ├── Metadata.json
│   ├── Question.json
│   ├── Question.txt
│   └── Solution.json
├── problem_15
│   ├── Metadata.json
│   ├── Question.json
│   ├── Question.txt
│   └── Solution.json
├── problem_19
│   ├── Metadata.json
│   ├── Question.json
│   ├── Question.txt
│   └── Solution.json
├── problem_2
│   ├── Metadata.json
│   ├── Question.json
│   ├── Question.txt
│   └── Solution.json
├── problem_21
│   ├── Metadata.json
│   ├── Question.json
│   ├── Question.txt
│   └── Solution.json
...

Directory structure of dataset is as above, now i want to get follwing from json file
and store in mongo atlas using Problem.js model and then an route that display them
'''
-> Question.json:
{
    "Description":
    "Input":
    "Output":
    "Examples": [
        {
            "input": 
            "output":
        }
    ],
    "Note":
}

Metadata.json:
"name":
"difficulty": 
"raw_tags": []
"tags": []
'''