{
    "problemId": "good-permutation-001",
    "problemName": "Good Permutation",
    "solutions": [
      {
        "code": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    res = [-1] * n\n    used = [False] * n\n    i = n - 1\n    while i >= 0:\n        sq = int((i + i)**0.5)\n        while sq * sq > 2 * i:\n            sq -= 1\n        j = sq * sq - i\n        if j < 0 or j > i:\n            print(-1)\n            break\n        for k in range(j, i + 1):\n            res[k] = j + i - k\n        i = j - 1\n    else:\n        print(' '.join(map(str, res)))",
        "language": "python",
        "solutionNumber": 1
      },
      {
        "code": "#include <iostream>\n#include <vector>\n#include <cmath>\nusing namespace std;\n\nint main() {\n    int t;\n    cin >> t;\n    while (t--) {\n        int n;\n        cin >> n;\n        vector<int> res(n, -1);\n        int i = n - 1;\n        while (i >= 0) {\n            int sq = sqrt(2 * i);\n            while (sq * sq > 2 * i) sq--;\n            int j = sq * sq - i;\n            if (j < 0 || j > i) {\n                cout << -1 << endl;\n                goto next;\n            }\n            for (int k = j; k <= i; ++k)\n                res[k] = j + i - k;\n            i = j - 1;\n        }\n        for (int x : res) cout << x << \" \";\n        cout << endl;\n    next:;\n    }\n    return 0;\n}",
        "language": "cpp",
        "solutionNumber": 2
      },
      {
        "code": "const readline = require('readline');\nconst rl = readline.createInterface({ input: process.stdin, output: process.stdout });\nlet input = [];\nrl.on('line', line => input.push(line));\nrl.on('close', () => {\n    let t = parseInt(input[0]);\n    let idx = 1;\n    while (t--) {\n        let n = parseInt(input[idx++]);\n        let res = Array(n).fill(-1);\n        let i = n - 1;\n        let failed = false;\n        while (i >= 0) {\n            let sq = Math.floor(Math.sqrt(2 * i));\n            while (sq * sq > 2 * i) sq--;\n            let j = sq * sq - i;\n            if (j < 0 || j > i) {\n                console.log(-1);\n                failed = true;\n                break;\n            }\n            for (let k = j; k <= i; ++k) {\n                res[k] = j + i - k;\n            }\n            i = j - 1;\n        }\n        if (!failed) console.log(res.join(' '));\n    }\n});",
        "language": "javascript",
        "solutionNumber": 3
      },
      {
        "code": "import java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        while (t-- > 0) {\n            int n = sc.nextInt();\n            int[] res = new int[n];\n            Arrays.fill(res, -1);\n            int i = n - 1;\n            boolean ok = true;\n            while (i >= 0) {\n                int sq = (int) Math.sqrt(2 * i);\n                while (sq * sq > 2 * i) sq--;\n                int j = sq * sq - i;\n                if (j < 0 || j > i) {\n                    System.out.println(-1);\n                    ok = false;\n                    break;\n                }\n                for (int k = j; k <= i; k++)\n                    res[k] = j + i - k;\n                i = j - 1;\n            }\n            if (ok) {\n                for (int k = 0; k < n; k++)\n                    System.out.print(res[k] + \" \");\n                System.out.println();\n            }\n        }\n    }\n}",
        "language": "java",
        "solutionNumber": 4
      }
    ],
    "createdAt": "2025-05-24T00:00:00.000Z"
  }
  