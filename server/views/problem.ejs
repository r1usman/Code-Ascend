<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Specific problem</title>
    <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
</head>
<body>
    <!-- views/problem.ejs -->
<div class="flex min-h-screen">
    <!-- Left Panel -->
    <div class="w-1/2 border-r border-gray-200 overflow-y-auto">
      
      <!-- Left Panel: Small Top Header Tabs -->
      <div class="border-b border-gray-300 mb-4">
        <nav class="flex space-x-4 text-sm font-medium text-gray-600">
          <button id="tab-desc" class="py-2 px-4 border-b-2 border-indigo-600 text-indigo-600 focus:outline-none">
            Problem Description
          </button>
          <button id="tab-solutions" class="py-2 px-4 hover:text-indigo-600 focus:outline-none">
            Solutions
          </button>
          <button id="tab-discussion" class="py-2 px-4 hover:text-indigo-600 focus:outline-none">
            Discussion
          </button>
        </nav>
      </div>
  
      <!-- Problem Description -->
      <div id="content-desc" class="">
        <div class="p-6">
          <!-- Title and Meta -->
          <div class="mb-6">
            <h1 class="text-2xl font-bold text-gray-900 mb-4"><%= problem.name %></h1>
            
            <% 
              let difficultyColor = 'bg-yellow-100 text-yellow-800';
              const difficulty = (problem.difficulty || 'Medium').toLowerCase();

              if (difficulty === 'easy') difficultyColor = 'bg-green-100 text-green-800';
              if (problem.difficulty === 'medium_hard') difficultyColor = 'bg-amber-200 text-amber-900';
              if (difficulty === 'hard') difficultyColor = 'bg-red-100 text-red-800';
              if (problem.difficulty === 'VERY_HARD') difficultyColor = 'bg-red-200 text-red-900';
            %>
    
            <div class="flex items-center space-x-4 mb-4">
              <!-- Difficulty -->
              <span class="px-3 py-1 rounded-full text-sm font-medium <%= difficultyColor %>">
                <%= problem.difficulty || 'Medium' %>
              </span>
    
              <!-- Tags -->
              <% if (problem.tags?.length) { %>
                <div class="flex items-center space-x-1">
                  <span class="text-gray-600 text-sm">Topics:</span>
                  <% problem.tags.forEach((tag, i) => { %>
                    <span class="text-blue-600 hover:text-blue-800 text-sm cursor-pointer"><%= tag %><%= i < problem.tags.length - 1 ? ',' : '' %></span>
                  <% }) %>
                </div>
              <% } %>
            </div>
    
            <!-- Stats (Optional) -->
            <div class="flex items-center space-x-6 text-sm text-gray-600">
              <div class="flex items-center space-x-1">
                <span class="text-green-600">âœ“</span>
                <span>Accepted</span><span class="font-medium">0</span>
              </div>
              <div class="flex items-center space-x-1">
                <span>Submissions</span><span class="font-medium">0</span>
              </div>
              <div class="flex items-center space-x-1">
                <span>Acceptance Rate</span><span class="font-medium">0%</span>
              </div>
            </div>
          </div>
    
          <!-- Problem Description -->
          <div class="prose max-w-none text-gray-700">
            <% if (problem.description) { %>
              <div class="mb-6 leading-relaxed">
                <%- problem.description
                  .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
                  .replace(/\*(.*?)\*/g, '<em>$1</em>')
                  .replace(/`([^`]+)`/g, '<code class="bg-gray-100 px-1 py-0.5 rounded text-sm font-mono">$1</code>')
                  .replace(/\n\n/g, '</p><p class="mb-4">')
                  .replace(/\n/g, '<br>') %>
              </div>
            <% } %>
    
            <!-- Examples -->
            <% if (problem.examples?.length) { %>
              <div class="mb-8">
                <% problem.examples.forEach((example, i) => { %>
                  <div class="mb-6">
                    <h3 class="text-lg font-semibold mb-3">Example <%= i + 1 %>:</h3>
    
                    <% if (example.input) { %>
                      <div class="mb-2">
                        <div class="font-medium text-sm">Input:</div>
                        <div class="bg-gray-50 border p-3 rounded-lg text-sm font-mono"><%= example.input %></div>
                      </div>
                    <% } %>
    
                    <% if (example.output) { %>
                      <div class="mb-2">
                        <div class="font-medium text-sm">Output:</div>
                        <div class="bg-gray-50 border p-3 rounded-lg text-sm font-mono"><%= example.output %></div>
                      </div>
                    <% } %>
    
                    <% if (example.explanation) { %>
                      <div class="mb-2">
                        <div class="font-medium text-sm">Explanation:</div>
                        <div class="text-sm text-gray-700 leading-relaxed">
                          <%- example.explanation
                            .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
                            .replace(/\*(.*?)\*/g, '<em>$1</em>')
                            .replace(/`([^`]+)`/g, '<code class="bg-gray-100 px-1 py-0.5 rounded text-sm font-mono">$1</code>') %>
                        </div>
                      </div>
                    <% } %>
                  </div>
                <% }) %>
              </div>
            <% } %>
    
            <!-- Constraints -->
            <% if (problem.input_format || problem.output_format || problem.note) { %>
              <div class="mb-8">
                <h3 class="text-lg font-semibold mb-3">Constraints:</h3>
                <div class="space-y-4 text-sm text-gray-700">
                  <% if (problem.input_format) { %>
                    <div>
                      <div class="font-medium">Input:</div>
                      <div class="ml-4">
                        <%- problem.input_format
                          .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
                          .replace(/\*(.*?)\*/g, '<em>$1</em>')
                          .replace(/`([^`]+)`/g, '<code class="bg-gray-100 px-1 py-0.5 rounded text-sm font-mono">$1</code>')
                          .replace(/\n/g, '<br>') %>
                      </div>
                    </div>
                  <% } %>
    
                  <% if (problem.output_format) { %>
                    <div>
                      <div class="font-medium">Output:</div>
                      <div class="ml-4">
                        <%- problem.output_format
                          .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
                          .replace(/\*(.*?)\*/g, '<em>$1</em>')
                          .replace(/`([^`]+)`/g, '<code class="bg-gray-100 px-1 py-0.5 rounded text-sm font-mono">$1</code>')
                          .replace(/\n/g, '<br>') %>
                      </div>
                    </div>
                  <% } %>
    
                  <% if (problem.note) { %>
                    <div>
                      <div class="font-medium">Note:</div>
                      <div class="ml-4">
                        <%- problem.note
                          .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
                          .replace(/\*(.*?)\*/g, '<em>$1</em>')
                          .replace(/`([^`]+)`/g, '<code class="bg-gray-100 px-1 py-0.5 rounded text-sm font-mono">$1</code>')
                          .replace(/\n/g, '<br>') %>
                      </div>
                    </div>
                  <% } %>
                </div>
              </div>
            <% } %>
    
            <!-- Related Tags -->
            <% if (problem.raw_tags?.length) { %>
              <div class="border-t pt-6">
                <div class="flex items-center space-x-2 mb-4">
                  <span class="text-sm font-medium text-gray-600">Related Topics:</span>
                  <div class="flex flex-wrap gap-2">
                    <% problem.raw_tags.forEach(tag => { %>
                      <span class="bg-gray-100 hover:bg-gray-200 px-3 py-1 rounded-full text-sm text-gray-700 cursor-pointer">
                        <%= tag %>
                      </span>
                    <% }) %>
                  </div>
                </div>
              </div>
            <% } %>
          </div>
        </div>
      </div>
  
      <!-- Solutions -->
      <div id="content-solutions" class="hidden">
        <% if (solutions && solutions.length > 0) { %>
          <% solutions.forEach(sol => { %>
            <div class="mb-4 p-4 bg-white rounded shadow">
              <h3 class="font-semibold text-lg mb-2"><%= sol.language %> Solution</h3>
              <pre class="bg-gray-100 p-3 rounded overflow-x-auto text-sm"><code><%= sol.code %></code></pre>
            </div>
          <% }) %>
        <% } else { %>
          <p class="text-gray-500">No solutions available yet.</p>
        <% } %>
      </div>

  
      <!-- Discussions -->
      <div id="content-discussion" class="hidden">
        <!-- Placeholder for discussion/comments -->
        <p class="text-gray-600 italic">User comments and discussions will be here.</p>
      </div>
    </div>
  
    <!-- Right Panel - Code Editor -->
    <div class="w-1/2 bg-gray-50 p-6">
      <!-- Language Select -->
      <div class="flex justify-between items-center mb-4">
        <select class="bg-white border border-gray-300 rounded-lg px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
          <option>Python3</option>
          <option>JavaScript</option>
          <option>Java</option>
          <option>C++</option>
          <option>C</option>
        </select>
        <div class="flex items-center space-x-2 text-sm text-gray-600">
          <button class="hover:text-gray-800">Auto</button>
          <div class="w-px h-4 bg-gray-300"></div>
          <button class="hover:text-gray-800">Settings</button>
        </div>
      </div>
  
      <!-- Code Editor Placeholder -->
      <div class="bg-white border border-gray-300 rounded-lg h-96 mb-4 overflow-auto p-4 font-mono text-sm">
        <div class="text-gray-500"># Write your code here</div>
        <div class="text-white mt-2">
          <span class="text-blue-400">class</span> <span class="text-yellow-400">Solution</span>:<br>
          &nbsp;&nbsp;&nbsp;&nbsp;<span class="text-blue-400">def</span> <span class="text-green-400">solveProblem</span>(<span class="text-orange-400">self</span>):<br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="text-blue-400">pass</span>
        </div>
      </div>
  
      <!-- Action Buttons -->
      <div class="flex space-x-2">
        <button class="bg-gray-200 hover:bg-gray-300 px-4 py-2 rounded-lg text-sm font-medium">Run</button>
        <button class="bg-green-600 hover:bg-green-700 px-4 py-2 text-white rounded-lg text-sm font-medium">Submit</button>
      </div>
    </div>
  </div>

  <script>
    // Tab switching logic
    const tabs = {
      desc: document.getElementById('tab-desc'),
      solutions: document.getElementById('tab-solutions'),
      discussion: document.getElementById('tab-discussion')
    };

    const contents = {
      desc: document.getElementById('content-desc'),
      solutions: document.getElementById('content-solutions'),
      discussion: document.getElementById('content-discussion')
    };

    function activateTab(selected) {
      for (const key in tabs) {
        if (key === selected) {
          tabs[key].classList.add('border-indigo-600', 'text-indigo-600');
          tabs[key].classList.remove('hover:text-indigo-600');
          contents[key].classList.remove('hidden');
        } else {
          tabs[key].classList.remove('border-indigo-600', 'text-indigo-600');
          tabs[key].classList.add('hover:text-indigo-600');
          contents[key].classList.add('hidden');
        }
      }
    }

    // Initialize with Problem Description tab active
    activateTab('desc');

    // Add click event listeners
    tabs.desc.addEventListener('click', () => activateTab('desc'));
    tabs.solutions.addEventListener('click', () => activateTab('solutions'));
    tabs.discussion.addEventListener('click', () => activateTab('discussion'));
  </script>

</body>
</html>